# set a fancy prompt (non-color, unless we know we "want" color)
##case "$TERM" in
##xterm-color)
##    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
##    ;;
##*)
##    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
##    ;;
##esac

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

if [ -e /usr/lib/git-core/git-sh-prompt ]; then
    . /usr/lib/git-core/git-sh-prompt
else
    __git_ps1 ()
    {
        printf ""
    }
fi

__prompt_extra ()
{
    if [[ -n $PROMPT_EXTRA ]]; then
        printf "\033[01;36m[$PROMPT_EXTRA] ";
    fi
}

__jobs ()
{
    njobs=$(jobs | grep -v SHELL_SESSION_HISTFILE_NEW |  wc -l | awk '{ print $1 }')
    if [ $njobs -gt "0" ];
    then
        printf "\033[01;31m($njobs) ";
    fi
}

__cmd_failed ()
{
    if [ $LAST_EXIT -ne "0" ];
    then
        printf "\033[01;31m";
    fi
}

function prompt_text () {
  dir=$1

  if [[ $dir == $HOME ]]; then
    echo "🏠"
  elif [[ $dir == "$HOME/projects/"* ]]; then
    echo "📁 "${dir#"$HOME/projects/"}
  elif [[ $dir == "$HOME"* ]]; then
    echo "🏠 "${dir#"$HOME/"}
  else
    echo $dir
  fi
}

# set a fancy prompt (non-color, unless we can handle color)
COLORS=$(tput colors 2> /dev/null)
if [ $? = 0 ] && [ $COLORS -gt 2 ]; then
    PS1='${debian_chroot:+($debian_chroot)}$(__prompt_extra )$(__jobs)\[\033[01;31m\]$(__git_ps1 "[%s] ")\[\033[01;32m\]$(__cmd_failed)\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\n\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}$(__git_ps1 "[%s] ")\u@\h:\w\n\$ '
fi

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

case $TERM in
    linux)
        PROMPT_COMMAND='LAST_EXIT=$?; sync_pmb_key; reconnect_ssh_agent;'$PROMPT_COMMAND
        ;;
    xterm*)
        PROMPT_COMMAND='LAST_EXIT=$?; if [ -n "$WIN_TITLE" ]; then echo -ne "\033]0;[${WIN_TITLE}] $(prompt_text $PWD)\007"; else echo -ne "\033]0;$(prompt_text $PWD)\007"; fi; sync_pmb_key; reconnect_ssh_agent;'$PROMPT_COMMAND
        ;;
    screen*)
        PROMPT_COMMAND='LAST_EXIT=$?;if [ -n "$WIN_TITLE" ]; then echo -ne "\033k[${WIN_TITLE}] $(prompt_text $PWD)\033\\"; else echo -ne "\033k$(prompt_text $PWD)\033\\"; fi; sync_pmb_key; reconnect_ssh_agent;'$PROMPT_COMMAND
        ;;
esac
