# From /usr/share/doc/bash-3.2/functions/pathfuncs
# is $1 missing from $2 (or PATH) ?
no_path() {
    eval "case :\$${2-PATH}: in *:$1:*) return 1;; *) return 0;; esac"
}
# if $1 exists and is not in path, append it
add_path () {
    [ -d ${1:-.} ] && no_path $* && eval ${2:-PATH}="\$${2:-PATH}:$1"
}
# if $1 exists and is not in path, prepend it
pre_path () {
    [ -d ${1:-.} ] && no_path $* && eval ${2:-PATH}="$1:\$${2:-PATH}"
}
# if $1 is in path, remove it
del_path () {
    no_path $* || eval ${2:-PATH}=`eval echo :'$'${2:-PATH}: |
    sed -e "s;:$1:;:;g" -e "s;^:;;" -e "s;:\$;;"`
}

# make sure these paths are before the system paths
for path in /usr/local/bin /usr/local/sbin $HOME/bin $HOME/bin/excluded $HOME/bin/remotecopy $HOME/bin/outputdiff $HOME/bin/git-subtree $HOME/bin/moreutils $HOME/.bashrc.d/resty; do
    del_path $path
    pre_path $path
done

add_path $HOME/bin/after

export PATH

function vipath() {
    TMP=`mktemp -t tmp.XXXXXXXXX`;
    editpath $1 2> $TMP;
    if [ "$?" -ne 0 ]; then
        cat $TMP;
    else
        source $TMP
    fi
    rm -f $TMP
}
